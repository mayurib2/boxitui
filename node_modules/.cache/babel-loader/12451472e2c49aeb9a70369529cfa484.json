{"ast":null,"code":"var _jsxFileName = \"/Users/rkarnik/Documents/personal/mayuri_code/breakless-react/src/components/files/ViewFiles.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport { connect } from \"react-redux\";\nimport appConfig from \"../../config/app-config\";\nimport request from \"request\";\n\nconst uuid = require('uuidv4').default;\n\nconst mapStateToProps = state => {\n  return {\n    session: state.session\n  };\n};\n\nclass ViewFiles extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.getColumnKeys = function () {\n      let columNames = [\"First Name\", \"Last Name\", \"Upload Time\", \"Updated Time\", \"Description\"];\n      return columNames;\n    };\n\n    this.getDataKeys = function () {\n      let dataKeys = [\"first_name\", \"last_name\", \"file_uploaded_at\", \"file_updated_at\", \"file_description\"];\n      return dataKeys;\n    };\n\n    this.getHeader = function () {\n      var keys = this.getColumnKeys();\n      return keys.map((key, index) => {\n        return React.createElement(\"th\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, key.toUpperCase());\n      });\n    };\n\n    this.getRowsData = function () {\n      console.log(\"CALLING getRowsData\");\n      let isAPICallDone = this.state.apiStatus; // console.log(\"getRowsData myItems \",myItems);\n\n      console.log(\"isAPICallDone  \", isAPICallDone);\n\n      if (isAPICallDone === \"SUCCESS\") {\n        let myItems = JSON.parse(this.state.apiResponse);\n        let keys = this.getDataKeys();\n        console.log(\"INSIDE IF isAPICallDone getRowsData myItems length \", myItems.length);\n        console.log(\"INSIDE IF isAPICallDone getRowsData myItems  \", myItems);\n        return myItems.map((row, index) => {\n          console.log(\"row is \", row);\n          return React.createElement(\"tr\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, React.createElement(RenderRow, {\n            key: index,\n            data: row,\n            keys: keys,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }));\n        }); // myItems.map((myItem) => {\n        //     console.log(\"********* Iterating getRowsData myItem \",myItem);\n        // });\n      } else {\n        console.log(\" *********** EMPTY EMPTY ROW CREATED\");\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      apiStatus: 'Not called'\n    };\n    console.log(\"ViewFiles props \", props.location);\n    console.log(\"ViewFiles this.state \", this.state);\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getColumnKeys = this.getColumnKeys.bind(this);\n    this.getDataKeys = this.getDataKeys.bind(this); // this.state = {\n    //     selectedFile: null,\n    //     typedText:'',\n    //     isUploadSuccess:'false'\n    //\n    // }\n  }\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      let myArr = [{\n        \"id\": \"0a8d1346-a5e7-46c7-863d-9a2671adb78a\",\n        \"first_name\": \"rka\",\n        \"last_name\": \"kar\",\n        \"email\": \"rkarnikdeals@gmail.com\",\n        \"user_file_name\": \"rohan file 1.txt\",\n        \"unique_file_name\": \"33c09542-f949-4ec6-b4cc-233f32fef5bd#rohan file 1.txt\",\n        \"file_url\": \"file_url\",\n        \"file_description\": \"first file 1209\",\n        \"file_uploaded_at\": \"2019-10-25T19:10:18.180Z\",\n        \"file_updated_at\": \"2019-10-25T19:11:48.647Z\"\n      }, {\n        \"id\": \"428cc8e1-ce40-45e0-bc20-522bc5bfd9a2\",\n        \"first_name\": \"rka\",\n        \"last_name\": \"kar\",\n        \"email\": \"rkarnikdeals@gmail.com\",\n        \"user_file_name\": \"Mayuri_1.txt\",\n        \"unique_file_name\": \"00df56c4-1ac9-4d1d-a92a-13197a32c2f9#Mayuri_1.txt\",\n        \"file_url\": \"file_url\",\n        \"file_description\": \"mayuri first file test\",\n        \"file_uploaded_at\": \"2019-10-25T19:14:29.006Z\",\n        \"file_updated_at\": \"2019-10-25T19:15:45.280Z\"\n      }];\n      myArr.map(item => {\n        console.log(\"componentDidMount item \", item);\n      }); // Call the API server GET /users endpoint with our JWT access token\n\n      console.log(\"ViewFiles componentDidMount this.props.session.credentials.idToken \", this.props.session.credentials.idToken);\n      const options = {\n        url: \"\".concat(appConfig.apiUri, \"/file_details\"),\n        headers: {\n          Authorization: \"Bearer \".concat(this.props.session.credentials.idToken)\n        }\n      };\n      this.setState({\n        apiStatus: 'Loading...'\n      });\n      request.get(options, (err, resp, body) => {\n        let apiStatus, apiResponse;\n\n        if (err) {\n          // is API server started and reachable?\n          apiStatus = 'Unable to reach API';\n          console.error(apiStatus + ': ' + err);\n        } else if (resp.statusCode !== 200) {\n          // API returned an error\n          apiStatus = 'Error response received';\n          apiResponse = body;\n          console.error(apiStatus + ': ' + JSON.stringify(resp));\n        } else {\n          apiStatus = 'SUCCESS';\n          apiResponse = body;\n          console.log(\"ViewFIles GET FILES API RESPONSE \", body); // this.setState({apiStatus:\"SUCCESS\",apiResponse:body});\n\n          console.log(\"ViewFIles componentDidMount state \", this.state);\n        }\n\n        this.setState({\n          apiStatus: apiStatus,\n          apiResponse: body\n        }); // this.setState({ apiStatus, apiResponse })\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container View-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Home\")), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/files/upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Upload File\")), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/files/update\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Update Existing File\"))), React.createElement(MDBTable, {\n      className: \"table table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(MDBTableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.getHeader())), React.createElement(MDBTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.getRowsData())));\n  } // render() {\n  //     return (\n  //         <div>\n  //         <MDBTable>\n  //             <MDBTableHead>\n  //                 <tr>\n  //                     <th>#</th>\n  //                     <th>First Name</th>\n  //                     <th>Last Name</th>\n  //                     <th>File Upload Time</th>\n  //                     <th>File Updated Time</th>\n  //                     <th>File Description</th>\n  //                 </tr>\n  //             </MDBTableHead>\n  //             <MDBTableBody>\n  //                 {\n  //                     this.state.apiResponse.map(fileDetail => {\n  //                     <TableRow key={fileDetail.first_name}>\n  //                         <TableCell component=\"th\" scope=\"row\">\n  //                             {row.first_name}\n  //                         </TableCell>\n  //                         <TableCell align=\"right\">{row.last_name}</TableCell>\n  //                         <TableCell align=\"right\">{row.file_uploaded_at}</TableCell>\n  //                         <TableCell align=\"right\">{row.file_updated_at}</TableCell>\n  //                         <TableCell align=\"right\">{row.file_description}</TableCell>\n  //                     </TableRow>\n  //                 })\n  //                 }\n  //                 <tr>\n  //                     <td>1</td>\n  //                     <td>Mark</td>\n  //                     <td>Otto</td>\n  //                     <td>@mdo</td>\n  //                 </tr>\n  //                 <tr>\n  //                     <td>2</td>\n  //                     <td>Jacob</td>\n  //                     <td>Thornton</td>\n  //                     <td>@fat</td>\n  //                 </tr>\n  //                 <tr>\n  //                     <td>3</td>\n  //                     <td>Larry</td>\n  //                     <td>the Bird</td>\n  //                     <td>@twitter</td>\n  //                 </tr>\n  //             </MDBTableBody>\n  //         </MDBTable>\n  //             <div>\n  //                 <div>API status: {this.state.apiStatus}</div>\n  //                 <div className=\"Home-api-response\">{this.state.apiResponse}</div>\n  //             </div>\n  //         </div>\n  //     );\n  // }\n\n\n}\n\nconst RenderRow = props => {\n  console.log(\"RenderRow props \", props);\n  return props.keys.map((key, index) => {\n    console.log(\"props.data[key] \", props.data[key]);\n    console.log(\"key \", key);\n    return React.createElement(\"td\", {\n      key: uuid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, props.data[key]);\n  });\n};\n\nexport default connect(mapStateToProps)(ViewFiles);","map":{"version":3,"sources":["/Users/rkarnik/Documents/personal/mayuri_code/breakless-react/src/components/files/ViewFiles.js"],"names":["React","Component","Link","MDBTable","MDBTableBody","MDBTableHead","connect","appConfig","request","uuid","require","default","mapStateToProps","state","session","ViewFiles","constructor","props","context","getColumnKeys","columNames","getDataKeys","dataKeys","getHeader","keys","map","key","index","toUpperCase","getRowsData","console","log","isAPICallDone","apiStatus","myItems","JSON","parse","apiResponse","length","row","location","bind","componentDidMount","isLoggedIn","myArr","item","credentials","idToken","options","url","apiUri","headers","Authorization","setState","get","err","resp","body","error","statusCode","stringify","render","RenderRow","data"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {MDBTable, MDBTableBody, MDBTableHead} from 'mdbreact';\nimport {connect} from \"react-redux\";\nimport appConfig from \"../../config/app-config\";\nimport request from \"request\";\n\nconst uuid = require('uuidv4').default;\nconst mapStateToProps = state => {\n    return {session: state.session}\n}\n\nclass ViewFiles extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {apiStatus: 'Not called'}\n        console.log(\"ViewFiles props \", props.location);\n        console.log(\"ViewFiles this.state \", this.state);\n        this.getHeader = this.getHeader.bind(this);\n        this.getRowsData = this.getRowsData.bind(this);\n        this.getColumnKeys = this.getColumnKeys.bind(this);\n        this.getDataKeys = this.getDataKeys.bind(this);\n        // this.state = {\n        //     selectedFile: null,\n        //     typedText:'',\n        //     isUploadSuccess:'false'\n        //\n        // }\n    }\n\n    componentDidMount() {\n\n        if (this.props.session.isLoggedIn) {\n\n            let myArr = [{\n                \"id\": \"0a8d1346-a5e7-46c7-863d-9a2671adb78a\",\n                \"first_name\": \"rka\",\n                \"last_name\": \"kar\",\n                \"email\": \"rkarnikdeals@gmail.com\",\n                \"user_file_name\": \"rohan file 1.txt\",\n                \"unique_file_name\": \"33c09542-f949-4ec6-b4cc-233f32fef5bd#rohan file 1.txt\",\n                \"file_url\": \"file_url\",\n                \"file_description\": \"first file 1209\",\n                \"file_uploaded_at\": \"2019-10-25T19:10:18.180Z\",\n                \"file_updated_at\": \"2019-10-25T19:11:48.647Z\"\n            }, {\n                \"id\": \"428cc8e1-ce40-45e0-bc20-522bc5bfd9a2\",\n                \"first_name\": \"rka\",\n                \"last_name\": \"kar\",\n                \"email\": \"rkarnikdeals@gmail.com\",\n                \"user_file_name\": \"Mayuri_1.txt\",\n                \"unique_file_name\": \"00df56c4-1ac9-4d1d-a92a-13197a32c2f9#Mayuri_1.txt\",\n                \"file_url\": \"file_url\",\n                \"file_description\": \"mayuri first file test\",\n                \"file_uploaded_at\": \"2019-10-25T19:14:29.006Z\",\n                \"file_updated_at\": \"2019-10-25T19:15:45.280Z\"\n            }];\n            myArr.map((item) => {\n                console.log(\"componentDidMount item \", item);\n            });\n            // Call the API server GET /users endpoint with our JWT access token\n            console.log(\"ViewFiles componentDidMount this.props.session.credentials.idToken \", this.props.session.credentials.idToken);\n            const options = {\n                url: `${appConfig.apiUri}/file_details`,\n                headers: {\n                    Authorization: `Bearer ${this.props.session.credentials.idToken}`\n                }\n            }\n\n            this.setState({apiStatus: 'Loading...'});\n            request.get(options, (err, resp, body) => {\n                let apiStatus, apiResponse\n                if (err) {\n                    // is API server started and reachable?\n                    apiStatus = 'Unable to reach API'\n                    console.error(apiStatus + ': ' + err)\n                } else if (resp.statusCode !== 200) {\n                    // API returned an error\n                    apiStatus = 'Error response received'\n                    apiResponse = body\n                    console.error(apiStatus + ': ' + JSON.stringify(resp))\n                } else {\n                    apiStatus = 'SUCCESS'\n                    apiResponse = body\n                    console.log(\"ViewFIles GET FILES API RESPONSE \", body);\n                    // this.setState({apiStatus:\"SUCCESS\",apiResponse:body});\n                    console.log(\"ViewFIles componentDidMount state \", this.state);\n                }\n                this.setState({apiStatus: apiStatus, apiResponse: body})\n                // this.setState({ apiStatus, apiResponse })\n            })\n        }\n    }\n\n    getColumnKeys = function () {\n        let columNames = [\"First Name\", \"Last Name\", \"Upload Time\", \"Updated Time\", \"Description\"]\n        return columNames;\n    }\n\n    getDataKeys = function () {\n        let dataKeys = [\"first_name\", \"last_name\", \"file_uploaded_at\", \"file_updated_at\", \"file_description\"]\n        return dataKeys;\n    }\n\n    getHeader = function () {\n        var keys = this.getColumnKeys();\n        return keys.map((key, index) => {\n            return <th key={key}>{key.toUpperCase()}</th>\n        })\n    }\n\n    // getRowsData = function(){\n    //     var items = this.props.data;\n    //     var keys = this.getColumnKeys();\n    //     return items.map((row, index)=>{\n    //         return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n    //     })\n    // }\n    getRowsData = function () {\n        console.log(\"CALLING getRowsData\");\n        let isAPICallDone = this.state.apiStatus;\n\n        // console.log(\"getRowsData myItems \",myItems);\n        console.log(\"isAPICallDone  \", isAPICallDone);\n        if (isAPICallDone === \"SUCCESS\") {\n            let myItems = JSON.parse(this.state.apiResponse);\n            let keys = this.getDataKeys();\n            console.log(\"INSIDE IF isAPICallDone getRowsData myItems length \", myItems.length);\n            console.log(\"INSIDE IF isAPICallDone getRowsData myItems  \", myItems);\n            return myItems.map((row, index) => {\n                console.log(\"row is \", row);\n                return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n            })\n            // myItems.map((myItem) => {\n            //     console.log(\"********* Iterating getRowsData myItem \",myItem);\n            // });\n\n\n        } else {\n            console.log(\" *********** EMPTY EMPTY ROW CREATED\");\n            return <tr></tr>;\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"container View-header\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <Link to=\"/\">Home</Link>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <Link to=\"/files/upload\">Upload File</Link>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <Link to=\"/files/update\">Update Existing File</Link>\n                    </div>\n                </div>\n                <MDBTable className=\"table table-bordered\">\n                    <MDBTableHead>\n                        <tr>\n                            {this.getHeader()}\n                        </tr>\n                    </MDBTableHead>\n                    <MDBTableBody>\n                        {this.getRowsData()}\n                    </MDBTableBody>\n                </MDBTable>\n            </div>\n        )\n    }\n\n// render() {\n//     return (\n//         <div>\n//         <MDBTable>\n//             <MDBTableHead>\n//                 <tr>\n//                     <th>#</th>\n//                     <th>First Name</th>\n//                     <th>Last Name</th>\n//                     <th>File Upload Time</th>\n//                     <th>File Updated Time</th>\n//                     <th>File Description</th>\n//                 </tr>\n//             </MDBTableHead>\n//             <MDBTableBody>\n//                 {\n//                     this.state.apiResponse.map(fileDetail => {\n//                     <TableRow key={fileDetail.first_name}>\n//                         <TableCell component=\"th\" scope=\"row\">\n//                             {row.first_name}\n//                         </TableCell>\n//                         <TableCell align=\"right\">{row.last_name}</TableCell>\n//                         <TableCell align=\"right\">{row.file_uploaded_at}</TableCell>\n//                         <TableCell align=\"right\">{row.file_updated_at}</TableCell>\n//                         <TableCell align=\"right\">{row.file_description}</TableCell>\n//                     </TableRow>\n//                 })\n//                 }\n//                 <tr>\n//                     <td>1</td>\n//                     <td>Mark</td>\n//                     <td>Otto</td>\n//                     <td>@mdo</td>\n//                 </tr>\n//                 <tr>\n//                     <td>2</td>\n//                     <td>Jacob</td>\n//                     <td>Thornton</td>\n//                     <td>@fat</td>\n//                 </tr>\n//                 <tr>\n//                     <td>3</td>\n//                     <td>Larry</td>\n//                     <td>the Bird</td>\n//                     <td>@twitter</td>\n//                 </tr>\n//             </MDBTableBody>\n//         </MDBTable>\n//             <div>\n//                 <div>API status: {this.state.apiStatus}</div>\n//                 <div className=\"Home-api-response\">{this.state.apiResponse}</div>\n//             </div>\n//         </div>\n//     );\n// }\n\n\n}\n\nconst RenderRow = (props) => {\n    console.log(\"RenderRow props \", props);\n    return props.keys.map((key, index) => {\n        console.log(\"props.data[key] \", props.data[key]);\n        console.log(\"key \", key);\n        return <td key={uuid()}>{props.data[key]}</td>\n    })\n}\n\n\nexport default connect(mapStateToProps)(ViewFiles)\n"]},"metadata":{},"sourceType":"module"}