{"ast":null,"code":"var _jsxFileName = \"/Users/rkarnik/Documents/personal/mayuri_code/breakless-react/src/components/files/UpdateExistingFile.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport appConfig from \"../../config/app-config\";\nimport { connect } from \"react-redux\";\nimport UploadSuccessMessage from \"./UploadSuccessMessage\";\nimport './UpdateExistingFile.css';\nimport cognitoUtils from \"../../lib/cognitoUtils\";\n\nconst mapStateToProps = state => {\n  return {\n    session: state.session\n  };\n};\n\nclass UpdateExistingFile extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onChangeHandler = event => {\n      console.log(\" UpdateExistingFile onChangeHandler this.props.session.credentials.idToken\", this.props.session.credentials.idToken);\n      console.log(event.target.files[0]);\n      this.setState({\n        selectedFile: event.target.files[0],\n        loaded: 0\n      });\n    };\n\n    this.onBlurHandler = event => {\n      console.log(event.target.value);\n      this.setState({\n        typedText: event.target.value\n      });\n    };\n\n    this.onClickHandler = async () => {\n      let chosenFile = this.state.selectedFile;\n      console.log(\"UpdateExistingFile selectedFile = \", chosenFile);\n      console.log(\" UpdateExistingFile onClickHandler this.props.session.credentials.idToken\", this.props.session.credentials.idToken);\n      let params = {\n        user_file_name: chosenFile.name,\n        file_type: chosenFile.type,\n        is_existing_file: 'true'\n      };\n      console.log(\"UpdateExistingFile: Call to get preSignedUrl\"); // const {data: presignedPostData} = await apigClient.rkfilesPost(params, body, additionalParams);\n\n      const _ref = await axios.post(\"\".concat(appConfig.apiUri, \"/signed_url\"), params, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(this.props.session.credentials.idToken)\n        }\n      }),\n            presignedPostData = _ref.data;\n\n      console.log(\"UpdateExistingFile presignedPostData ,\", presignedPostData);\n      console.log(\"UpdateExistingFile presignedPostData.body ,\", presignedPostData.body);\n      const formData = new FormData();\n      Object.keys(presignedPostData.body.fields).forEach(key => {\n        console.log(\"UpdateExistingFile key \", key);\n        console.log(\"UpdateExistingFile presignedPostData.body.fields[key] \", presignedPostData.body.fields[key]);\n        formData.append(key, presignedPostData.body.fields[key]);\n      });\n      formData.append('file', chosenFile);\n      console.log(\"UpdateExistingFile MAKING UPLOAD CALL TO \", presignedPostData.body.url);\n      let uploadResult = await axios.post(presignedPostData.body.url, formData);\n      console.log(\" UpdateExistingFile Before storing filedeatils presignedPostData.body \", presignedPostData.body);\n      console.log(\" UpdateExistingFile Before storing filedeatils presignedPostData.body.fields \", presignedPostData.body.fields);\n      console.log(\" UpdateExistingFile Before storing filedeatils presignedPostData.body.fields.key \", presignedPostData.body.fields.key);\n      let update_file_details_params = {\n        user_file_name: chosenFile.name,\n        file_description: this.state.typedText,\n        unique_file_name: presignedPostData.body.fields.key\n      };\n      console.log(\"create_file_details_params = \", JSON.stringify(update_file_details_params));\n      let storedFileDetails = await axios.put(\"\".concat(appConfig.apiUri, \"/file_details\"), update_file_details_params, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(this.props.session.credentials.idToken)\n        }\n      });\n      console.log(\"UpdateExistingFile uploadResult \", uploadResult);\n      console.log(\"UpdateExistingFile storedFileDetails \", storedFileDetails);\n      this.setState({\n        isUploadSuccess: 'true'\n      });\n    };\n\n    console.log(\"UpdateExistingFile props \", props.location);\n    console.log(\"UpdateExistingFile this.state \", this.state);\n    this.state = {\n      selectedFile: null,\n      typedText: '',\n      isUploadSuccess: 'false'\n    };\n  }\n\n  renderUploadResult() {\n    if (this.state.isUploadSuccess === 'true') {\n      return React.createElement(UploadSuccessMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"update-file-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.props.session.isLoggedIn ? React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Home\")), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/files/upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Upload File\")), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/files/view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"View Uploaded Files\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      action: \"#\",\n      id: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Upload Your File \"), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onBlur: this.onBlurHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Upload\"))))), this.renderUploadResult(), React.createElement(\"a\", {\n      className: \"Home-link\",\n      href: \"#\",\n      onClick: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Sign out\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"You are not logged in.\"), React.createElement(\"a\", {\n      className: \"Home-link\",\n      href: cognitoUtils.getCognitoSignInUri(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Sign in\")));\n  }\n\n}\n\nexport default connect(mapStateToProps)(UpdateExistingFile);","map":{"version":3,"sources":["/Users/rkarnik/Documents/personal/mayuri_code/breakless-react/src/components/files/UpdateExistingFile.js"],"names":["React","Component","Link","axios","appConfig","connect","UploadSuccessMessage","cognitoUtils","mapStateToProps","state","session","UpdateExistingFile","constructor","props","context","onChangeHandler","event","console","log","credentials","idToken","target","files","setState","selectedFile","loaded","onBlurHandler","value","typedText","onClickHandler","chosenFile","params","user_file_name","name","file_type","type","is_existing_file","post","apiUri","headers","presignedPostData","data","body","formData","FormData","Object","keys","fields","forEach","key","append","url","uploadResult","update_file_details_params","file_description","unique_file_name","JSON","stringify","storedFileDetails","put","isUploadSuccess","location","renderUploadResult","render","isLoggedIn","onSignOut","getCognitoSignInUri"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport appConfig from \"../../config/app-config\";\nimport {connect} from \"react-redux\";\nimport UploadSuccessMessage from \"./UploadSuccessMessage\";\nimport './UpdateExistingFile.css'\nimport cognitoUtils from \"../../lib/cognitoUtils\";\n\nconst mapStateToProps = state => {\n    return {session: state.session}\n}\n\nclass UpdateExistingFile extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        console.log(\"UpdateExistingFile props \", props.location);\n        console.log(\"UpdateExistingFile this.state \", this.state);\n        this.state = {\n            selectedFile: null,\n            typedText: '',\n            isUploadSuccess: 'false'\n\n        }\n    }\n\n    onChangeHandler = event => {\n        console.log(\" UpdateExistingFile onChangeHandler this.props.session.credentials.idToken\", this.props.session.credentials.idToken);\n        console.log(event.target.files[0]);\n        this.setState({\n            selectedFile: event.target.files[0],\n            loaded: 0\n        });\n    };\n\n    onBlurHandler = event => {\n        console.log(event.target.value);\n        this.setState({typedText: event.target.value});\n    };\n\n    onClickHandler = async () => {\n        let chosenFile = this.state.selectedFile;\n        console.log(\"UpdateExistingFile selectedFile = \", chosenFile);\n        console.log(\" UpdateExistingFile onClickHandler this.props.session.credentials.idToken\", this.props.session.credentials.idToken);\n        let params = {\n            user_file_name: chosenFile.name,\n            file_type: chosenFile.type,\n            is_existing_file: 'true'\n        };\n\n        console.log(\"UpdateExistingFile: Call to get preSignedUrl\");\n        // const {data: presignedPostData} = await apigClient.rkfilesPost(params, body, additionalParams);\n        const {data: presignedPostData} = await axios.post(`${appConfig.apiUri}/signed_url`,\n            params,\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.props.session.credentials.idToken}`\n                }\n            });\n        console.log(\"UpdateExistingFile presignedPostData ,\", presignedPostData);\n        console.log(\"UpdateExistingFile presignedPostData.body ,\", presignedPostData.body);\n        const formData = new FormData();\n        Object.keys(presignedPostData.body.fields).forEach(key => {\n            console.log(\"UpdateExistingFile key \", key);\n            console.log(\"UpdateExistingFile presignedPostData.body.fields[key] \", presignedPostData.body.fields[key]);\n            formData.append(key, presignedPostData.body.fields[key]);\n        });\n        formData.append('file', chosenFile);\n        console.log(\"UpdateExistingFile MAKING UPLOAD CALL TO \", presignedPostData.body.url);\n        let uploadResult = await axios.post(presignedPostData.body.url, formData);\n        console.log(\" UpdateExistingFile Before storing filedeatils presignedPostData.body \", presignedPostData.body);\n        console.log(\" UpdateExistingFile Before storing filedeatils presignedPostData.body.fields \", presignedPostData.body.fields);\n        console.log(\" UpdateExistingFile Before storing filedeatils presignedPostData.body.fields.key \", presignedPostData.body.fields.key);\n        let update_file_details_params = {\n            user_file_name: chosenFile.name,\n            file_description: this.state.typedText,\n            unique_file_name: presignedPostData.body.fields.key\n        };\n        console.log(\"create_file_details_params = \", JSON.stringify(update_file_details_params));\n\n        let storedFileDetails = await axios.put(`${appConfig.apiUri}/file_details`,\n            update_file_details_params,\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.props.session.credentials.idToken}`\n                }\n            }\n        );\n        console.log(\"UpdateExistingFile uploadResult \", uploadResult);\n        console.log(\"UpdateExistingFile storedFileDetails \", storedFileDetails);\n        this.setState({isUploadSuccess: 'true'});\n\n    };\n\n    renderUploadResult() {\n        if (this.state.isUploadSuccess === 'true') {\n            return <UploadSuccessMessage/>\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"update-file-body\">\n                {this.props.session.isLoggedIn ? (\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-3\">\n                                <Link to=\"/\">Home</Link>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <Link to=\"/files/upload\">Upload File</Link>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <Link to=\"/files/view\">View Uploaded Files</Link>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <form method=\"post\" action=\"#\" id=\"#\">\n                                    <div className=\"form-group files\">\n                                        <label>Upload Your File </label>\n                                        <input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\n                                        <input type=\"text\" onBlur={this.onBlurHandler}/>\n                                        <button type=\"button\" className=\"btn btn-success btn-block\"\n                                                onClick={this.onClickHandler}>Upload\n                                        </button>\n\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                        {this.renderUploadResult()}\n                        <a className=\"Home-link\" href=\"#\" onClick={this.onSignOut}>Sign out</a>\n                    </div>\n                ) : (\n                    <div>\n                        <p>You are not logged in.</p>\n                        <a className=\"Home-link\" href={cognitoUtils.getCognitoSignInUri()}>Sign in</a>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(UpdateExistingFile)\n"]},"metadata":{},"sourceType":"module"}